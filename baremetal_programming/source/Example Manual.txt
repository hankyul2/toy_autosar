	
	FND	Example 설명

	source_code -> Example -> 10_FND - 예제 경로

--------------------------------------------------------------------------------

	FND 예제는 Timer Interrupt / External Interrupt  앞선 예제를 응용하여 만든 StopWatch 입니다.
	
	Timer와 EXTI 는 앞선 예제에 설명이 되어 있기 때문에 앞선 예제를 참고하시기 바랍니다.
	
	FND는 순서는 아래와 같으며 FND 1개를 설정하기 위해서는 8개의 PIN을 설정해야 합니다. 
	
	
	--------------------------------------------------------	--------------------------------------------------------
	|						|						|						|						| 	|						|						|						|						| 
	|						|						|						|						|	|						|						|						|						|
	|						|						|						|						|	|						|						|						|						|
	|		FND 1		|		FND 2		|		FND 3		|		FND 4		|	|		FND 5		|		FND 6		|		FND 7		|		FND 8		|
	|						|						|						|						|	|						|						|						|						|
	|						|						|						|						|	|						|						|						|						|
	|						|						|						|						|	|						|						|						|						|
	--------------------------------------------------------	--------------------------------------------------------
	
	8개의 FND중에 한개를 살펴 보면 아래와 같이 A, B, C, D, E, F, G, DP로 구성되어 있습니다. 
	
			 A
		--------
		|			|
	C	|			|	B
		|			|
		--------
		|	 G	|
	E	|			|	C
		|			|
		--------	- (DP)
			 D
		
	PIN맵은 다음과 같습니다. 
	
	A = P0.23
	B = P0.24
	C = P1.21
	D = P2.11
	E = P2.12
	F = P2.13
	G = P3.25
	H = P3.26
	
	추가적으로 FND에서 살펴보아야 할 것이 Anode / Cathod 공통인지 알아야 합니다. 
	
	우리가 쓰는 FND는 Anode 공통입니다. Anode 공통은 전부 Vcc에 연결되어 있어 불을 켜기를 원하는 PIn에 Low (GPIO_ClearValue)로 바꿔주면 됩니다.
	
	LPC1768_fnd.c 코드를 보면 FND_DATA_Select 함수가 있는데 여기에 0~9까지 출력될때 Low로 되는 값이 정의 되어 있습니다. 
	
	위의 A ~DP 그림을 보며 각각의 출력값때 어떤 PIN이 LOW가 되는지 살펴봅니다. 
	
	FND의 숫자 표시는 위와 같은 방법으로 할 수 있으며, 마지막으로 실제로 우리가 FND를 볼 수 있는 원리를 설명 하겠습니다.
	
	Main의 while(1)을 보시면 FND_COM_DATA_Select함수를 통해서 1~8번 FND에 숫자를 출력하는 것을 알 수 있는데, FND를 보면
	
	동시적으로 바뀌는것을 볼 수 있습니다. 원래대로 프로그래밍이 되면 1~8번까지 순서에 맞춰 On / Off되야 정상이지만 아주 빠른 속도로 On / Off를 반복하고
	
	있기 때문에 우리의 눈으로는 계속 켜져있는 것 처럼 보이는 것 입니다.  딜레이 조절을 통해서 FND가 선명하게 보이는 것을 조절 할 수 있습니다.
	
	코드는 간단하게 코딩되어 있습니다. Timer를 이용하여 1초마다 TIMER0_IRQHandler에 진입하여 초의 1의 자리를 증가해주고 초의 1의 자리를 

	비교하여 10이 넘어가면 초의 10의자리를 올려주고 초의 10의 자리가 6을 넘어가면 분의 1의 자리를 올려주는 방식입니다.
	
	그리고 EXTI를 추가하여 INT Button을 누르면 현재 초 분을 저장하여 LAP TIME 처럼 옆에 FND에 복사해서 보여주게 됩니다.
	
	